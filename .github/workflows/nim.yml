name: Build and test Nim

on:
  push:
    paths-ignore:
      - '*.md'
      - 'documents/*'
  pull_request:
    paths-ignore:
      - '*.md'
      - 'documents/*'

jobs:
  # WIP でジョブがスキップされてもCIが失敗した扱いにならないようにするため
  skip:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Skip job"

  # WIP がコミットメッセージに含まれているとジョブを起動しない
  before:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, 'WIP')"
    steps:
      - run: echo "no WIP"

  build:
    runs-on: ${{ matrix.os }}
    needs: before
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # - macOS-latest
          # Need sqlite3_64.dll
          # - windows-latest
        nim-version:
          - 1.4.0
          - stable
    steps:
    - uses: actions/checkout@v2
    - name: Cache choosenim
      id: cache-choosenim
      uses: actions/cache@v1
      with:
        path: ~/.choosenim
        key: ${{ runner.os }}-choosenim-${{ matrix.nim-version }}
    - name: Cache nimble
      id: cache-nimble
      uses: actions/cache@v1
      with:
        path: ~/.nimble
        key: ${{ runner.os }}-nimble-${{ matrix.nim-version }}
    - uses: jiro4989/setup-nim-action@v1
      with:
        nim-version: ${{ matrix.nim-version }}
    - name: Package Refresh
      run: nimble refresh
    - name: Build
      run: nimble build -Y
    - name: Install
      run: nimble install -Y

  test-on-docker:
    runs-on: ubuntu-latest
    needs: before
    strategy:
      matrix:
        image-tag:
          - 1.4.4-alpine
          - 1.4.8-alpine
          - 1.6.0-alpine
    steps:
    - uses: actions/checkout@v2
    - name: Build docker image
      run: docker-compose build --build-arg IMAGE_TAG=${{ matrix.image-tag }} app
    - name: Test
      run: docker-compose run app sh /root/project/runTest.sh
    - name: Test multi-thread
      run: |
        echo '' >> tests/config.nims
        echo 'switch("threads", "on")' >> tests/config.nims
        echo 'switch("threadAnalysis", "off")' >> tests/config.nims
        docker-compose run app sh /root/project/runTest.sh

  create-tag-draft:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - build
      - test-on-docker
    steps:
      - uses: release-drafter/release-drafter@v5.3.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
